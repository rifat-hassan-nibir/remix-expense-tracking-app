{
  "version": 3,
  "sources": ["../../../../app/components/expenses/ExpenseStatistics.jsx", "../../../../app/components/expenses/ChartBar.jsx", "../../../../app/components/expenses/Chart.jsx", "../../../../app/routes/__app/expenses.analysis.jsx"],
  "sourcesContent": ["import { useMemo } from 'react';\n\nfunction calculateSummaryStatistics(expenses) {\n  const amounts = expenses.map((expense) => +expense.amount);\n  const maxAmount = Math.max(...amounts);\n  const minAmount = Math.min(...amounts);\n  const sum = expenses.reduce((prevVal, curVal) => curVal.amount + prevVal, 0);\n  const mean = sum / expenses.length;\n\n  return { minAmount, maxAmount, sum, mean };\n}\n\nfunction ExpenseStatistics({ expenses }) {\n  const { minAmount, maxAmount, sum, mean } = useMemo(\n    () => calculateSummaryStatistics(expenses),\n    [expenses]\n  );\n\n  return (\n    <section>\n      <h2>Summary Statistics</h2>\n      <dl id=\"expense-statistics\">\n        <div>\n          <dt>Total</dt>\n          <dd>${sum.toFixed(2)}</dd>\n        </div>\n        <div>\n          <dt>Average</dt>\n          <dd>${mean.toFixed(2)}</dd>\n        </div>\n        <div>\n          <dt> Min. Amount</dt>\n          <dd>${minAmount.toFixed(2)}</dd>\n        </div>\n        <div>\n          <dt>Max. Amount</dt>\n          <dd>${maxAmount.toFixed(2)}</dd>\n        </div>\n      </dl>\n    </section>\n  );\n}\n\nexport default ExpenseStatistics;\n", "const ChartBar = ({ maxValue, value, label }) => {\n  let barFillHeight = '0%';\n\n  if (maxValue > 0) {\n    barFillHeight = Math.round((value / maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar--inner\">\n        <div\n          className=\"chart-bar--fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar--label\">{label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n", "import ChartBar from './ChartBar';\n\nfunction Chart({ expenses }) {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of expenses) {\n    const expenseMonth = new Date(expense.date).getMonth(); // starting at 0 => January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  const dataPointValues = chartDataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <section>\n      <h2>Monthly Expenses</h2>\n      <ol className='chart'>\n        {chartDataPoints.map((dataPoint) => (\n          <ChartBar\n            key={dataPoint.label}\n            value={dataPoint.value}\n            maxValue={totalMaximum}\n            label={dataPoint.label}\n          />\n        ))}\n      </ol>\n    </section>\n  );\n}\n\nexport default Chart;\n", "// /expenses/analysis\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'First Expense',\n    amount: 12.99,\n    date: new Date().toISOString(),\n  },\n  {\n    id: 'e2',\n    title: 'Second Expense',\n    amount: 16.99,\n    date: new Date().toISOString(),\n  },\n];\n\nimport ExpenseStatistics from '~/components/expenses/ExpenseStatistics';\nimport Chart from '~/components/expenses/Chart';\n\nexport default function ExpensesAnalysisPage() {\n  return (\n    <main>\n      <Chart expenses={DUMMY_EXPENSES} />\n      <ExpenseStatistics expenses={DUMMY_EXPENSES} />\n    </main>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime"]
}
